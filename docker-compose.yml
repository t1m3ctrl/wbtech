services:
  app:
    build: .
    ports:
      - "8000:8000"
    environment:
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      GOOSE_DRIVER: postgres
      DB_HOST: postgres
      DB_PORT: "5432"
      DB_NAME: orders_db
      POSTGRES_USER: user
      GOOSE_MIGRATION_DIR: /app/schema
    depends_on:
      - postgres
      - kafka
    restart: always

  postgres:
    container_name: postgres
    image: postgres:latest
    restart: always
    environment:
      POSTGRES_USER: user
      POSTGRES_PASSWORD: $POSTGRES_PASSWORD
      POSTGRES_DB: orders_db
    volumes:
      - pgdata:/var/lib/postgresql/data
    ports:
      - "5777:5432"

  adminer:
    container_name: adminer
    image: adminer
    restart: always
    ports:
      - "8081:8080"
    depends_on:
      - postgres

  zookeeper:
    image: confluentinc/cp-zookeeper:7.0.0
    container_name: zookeeper
    environment:
      ZOOKEEPER_CLIENT_PORT: 2181

  kafka:
    image: confluentinc/cp-kafka:7.0.0
    container_name: kafka
    depends_on:
      - zookeeper
    environment:
      KAFKA_BROKER_ID: 1
      KAFKA_ZOOKEEPER_CONNECT: zookeeper:2181
      KAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:9092,PLAINTEXT_HOST://localhost:29092
      KAFKA_LISTENER_SECURITY_PROTOCOL_MAP: PLAINTEXT:PLAINTEXT,PLAINTEXT_HOST:PLAINTEXT
      KAFKA_INTER_BROKER_LISTENER_NAME: PLAINTEXT
      KAFKA_OFFSETS_TOPIC_REPLICATION_FACTOR: 1
#      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'false' # Отключаем автосоздание
      KAFKA_AUTO_CREATE_TOPICS_ENABLE: 'true'
    ports:
      - "29092:29092"

volumes:
  pgdata: